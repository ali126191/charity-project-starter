{"version":3,"file":"0.2d411c8b6c35a2e80e68.hot-update.js","sources":["webpack:///./src/cms/preview-templates/HomePagePreview.js","webpack:///./src/components/HomePageTemplate/index.js","webpack:///./src/cms/preview-templates/AboutPagePreview.js","webpack:///./src/components/AboutPageTemplate/index.js","webpack:///./src/components/Content/index.js","webpack:///./src/cms/preview-templates/ArticlePreview.js","webpack:///./src/components/ArticleTemplate/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/create-react-context.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-dev.js","webpack:///./.cache/loader.js","webpack:///./.cache/find-page.js","webpack:///./.cache/strip-prefix.js","webpack:///./.cache/emitter.js","webpack:///./.cache/prefetch.js","webpack:///./.cache/socketIo.js","webpack:///./.cache/error-overlay-handler.js","webpack:///./.cache/json-store.js","webpack:///./.cache/page-renderer.js","webpack:///./.cache/api-runner-browser.js","webpack:///./src/layouts/index.js","webpack:///./src/components/NavBar/index.js","webpack:///./src/components/Footer/index.js","webpack:///./src/cms/preview-templates/PricingPagePreview.js","webpack:///./src/components/PricingPageTemplate/index.js","webpack:///./src/components/Pricing/index.js","webpack:///./src/cms/preview-templates/ContactPagePreview.js","webpack:///./src/components/ContactPageTemplate/index.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport HomePageTemplate from '../../components/HomePageTemplate'\r\n\r\nconst HomePagePreview = ({ entry, getAsset }) => {\r\n  const entryBlurbs = entry.getIn(['data', 'offerings', 'blurbs'])\r\n  const blurbs = entryBlurbs ? entryBlurbs.toJS() : []\r\n\r\n  const entryTestimonials = entry.getIn(['data', 'testimonials'])\r\n  const testimonials = entryTestimonials ? entryTestimonials.toJS() : []\r\n\r\n  return (\r\n    <HomePageTemplate\r\n      title={entry.getIn(['data', 'title'])}\r\n      meta_title={entry.getIn(['data', 'meta_title'])}\r\n      meta_description={entry.getIn(['data', 'meta_description'])}\r\n      heading={entry.getIn(['data', 'heading'])}\r\n      description={entry.getIn(['data', 'description'])}\r\n      offerings={{ blurbs }}\r\n      testimonials={testimonials}\r\n    />\r\n  )\r\n}\r\n\r\nHomePagePreview.propTypes = {\r\n  entry: PropTypes.shape({\r\n    getIn: PropTypes.func,\r\n  }),\r\n  getAsset: PropTypes.func,\r\n}\r\n\r\nexport default HomePagePreview\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\n// import Offerings from '../Offerings'\r\n// import Testimonials from '../Testimonials'\r\nimport PropTypes from 'prop-types'\r\nimport './index.css'\r\n\r\nconst HomePageTemplate = ({\r\n  title,\r\n  heading,\r\n  description,\r\n  offerings,\r\n  meta_title,\r\n  meta_description,\r\n  testimonials,\r\n}) => (\r\n  <div>\r\n    <Helmet>\r\n      <meta charSet='utf-8' />\r\n      <meta httpEquiv='x-ua-compatible' content='ie=edge' /><meta name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=yes' />\r\n      <meta name='generator' content='Gatsby 2.1.23' />\r\n      <title>{meta_title}</title>\r\n      <meta name='description' content={meta_description} />\r\n    </Helmet>\r\n\r\n    <section className='hero is-primary is-bold is-medium'>\r\n      <div className='hero-body'>\r\n        <div className='container'>\r\n          <div className='columns'>\r\n            <div className='column is-10 is-offset-1'>\r\n              <div className='section'>\r\n                <h1 id='h1'className='title has-text-centered is-size-2 is-capitalized'>\r\n                    Mississauga Hindu Temple In The hear of the greater toronto area that welcomes all regarless of race or religious beliefs. come visit one of canada's oldest hindu mandir's and discover the beauty of celebrating diversity\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className='section section--gradient'>\r\n      <div className='container'>\r\n        <section className='section block'>\r\n          <div className='content'>\r\n            <div>\r\n              <h2 className='content has-text-centered has-text-weight-semibold is-size-3 is-uppercase is-large'>\r\n                  Welcome to Svhms\r\n              </h2>\r\n              <br />\r\n              <br />\r\n              <div className='block'>\r\n                <p className='content is-size-5'>Shri Vitthal Hindu Mandir (SVHM) is one of Mississauga’s longest running registered non-profit devoted to bringing families together, providing a safe place of worship, assisting new comers transition into the Canadian life, and preserving old traditions while embracing new ones. </p>\r\n                <p className='content is-size-5'>Established in 1996 in the beautiful city of Mississauga, Ontario, Canada — one of Canada’s fastest growing and diverse cities — we abide by the old simple code known as the “System of Vedanta” which combines religion, philosophy, and innovative nature of the Hindu's.  The Vedanta teaches us that we are all divine, regardless of creed, class, gender, and ethnicity, and that our souls divinity may be manifested through worship, contemplation, and unselfish work.  At SVHM we welcome everyone.</p>\r\n                <p className='content is-size-5'>The Mandir is located close to Toronto, Brampton, Oakville, Richmond Hill, Milton, and Etobicoke. Come visit us today and join our community, all are welcome!</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className='section'>\r\n          <figure className='video-container'>\r\n            <iframe title='temple video' width='1035' height='1000' src='https://www.youtube.com/embed/mgabrMvtUrw' frameBorder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowFullScreen />\r\n          </figure>\r\n          <div className='block content'>\r\n            <br />\r\n            <br />\r\n            <h2 className='has-text-centered has-text-weight-semibold is-size-3 is-uppercase is-large'>\r\n                HINDU TEMPLE IN MISSISSAUGA\r\n            </h2>\r\n            <br />\r\n            <br />\r\n            <p className='is-size-5'> SVHM is different from other the other temples and mandir’s in and around Toronto, Richmond Hill, Brampton, and Mississauga as it is more family oriented and transparent. The temple does not fund any external political groups and adheres to CRA policies for non profit organizations. </p>\r\n          </div>\r\n        </section>\r\n\r\n        <div className='section block'>\r\n          <div className='content'>\r\n            <hr className='hr-blue' />\r\n            <br />\r\n            <p className='count is-size-4 has-text-weight-light'>\r\n                \"Immigrating from Northern India in 2016, I did not find a facility in Toronto that provided a place where I can pray, mediate, practice yoga, and meet other Canadian-Tibetans like myself. Then I discovered SVHM, which has been instrumental in my journey of transitioning into the Canadian lifestyle, helping me establish myself in the GTA, build a network of quality peers who share my values, and where I can peacefully pray.\"\r\n            </p>\r\n            <br />\r\n            <div className='columns is-vcentered is-gapless is-mobile is-centered'>\r\n              <div className='column' />\r\n              <div className='column'>\r\n                <figure className='image is-128x128'>\r\n                  <img className='is-rounded' src='https://shrivitthal.com/wp-content/uploads/2018/02/25497478040_140ce47f31_k.jpg' alt='25497478040_140ce47f31_k.jpg' />\r\n                </figure>\r\n              </div>\r\n              <div className='column'>\r\n                <p className='is-size-5 is-uppercase is-centered'>\r\n                    TSERING WANGCHUKs\r\n                </p>\r\n                <p className='is-size-6 is-centered'>\r\n                    Tibetan-Canadian\r\n                </p>\r\n              </div>\r\n              <div className='column' />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <hr className='hr-blue' />\r\n        </div>\r\n\r\n        <div className='section block'>\r\n          <div className='content'>\r\n            <p className='is-size-4'> SVHM is different from other the other temples and mandir’s in and around Toronto, Richmond Hill, Brampton, and Mississauga as it is more family oriented and transparent. The temple does not fund any external political groups and adheres to CRA policies for non profit organizations. </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='section block'>\r\n          <div>\r\n            <h2 className='content has-text-centered has-text-weight-semibold is-size-3 is-uppercase is-large'>\r\n                WHAT WE OFFER\r\n            </h2>\r\n            <br />\r\n            <br />\r\n            <div className='columns is-multiline'>\r\n              <div className='column is-full block'>\r\n                <div className='columns is-vcentered'>\r\n                  <div className='column content'>\r\n                    <hr className='hr-left' />\r\n                    <h3 className='is-size-4 has-text-link is-uppercase'>CULTURAL PRESERVATION</h3>\r\n                    <p className='is-size-5'>Through events and story telling, we keep the ancient Hindu traditions alive ensuring their adoption by the next generation of Canadians.</p>\r\n                  </div>\r\n                  <div className='column'>\r\n                    <figure className='video-container'>\r\n                      <iframe title='video one' width='1035' height='1000' src='https://www.youtube.com/embed/mgabrMvtUrw' frameBorder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowFullScreen />\r\n                    </figure>\r\n                  </div>\r\n                </div>\r\n                <hr className='hr-full-width' />\r\n              </div>\r\n              <div className='column  is-full block'>\r\n                <div className='columns is-vcentered'>\r\n                  <div className='column content'>\r\n                    <hr className='hr-left' />\r\n                    <h3 className='is-size-4 has-text-link is-uppercase'>A PLACE OF WORSHIP</h3>\r\n                    <p className='is-size-5'>Our primary divine figureheads are Vitthoba, Ganesh, &amp; Sai Baba however members of our community are free to worship and pray to their god/goddess of choice.  Our facility has integrated most idols and we frequently hold cross-cultural events with other non-profits and places of worship.</p>\r\n                  </div>\r\n                  <div className='column'>\r\n                    <figure className='video-container'>\r\n                      <iframe title='video two' width='1522' height='856' src='https://www.youtube.com/embed/Fa9dFBf5Z4A' frameBorder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowFullScreen />\r\n                    </figure>\r\n                  </div>\r\n                </div>\r\n                <hr className='hr-full-width' />\r\n              </div>\r\n              <div className='column is-full block'>\r\n                <div className='columns is-vcentered'>\r\n                  <div className='column content'>\r\n                    <hr className='hr-left' />\r\n                    <h3 className='is-size-4 has-text-link is-uppercase'>EMBRACE CANADA</h3>\r\n                    <p className='is-size-5'>Throughout the year we hold numerous events that allow new immigrants and visiting dignitaries to experience Canadian culture – true north strong and free.</p>\r\n                    <p className='is-size-5'>We also help newcomers transition into the Canadian life by helping them learn the language and idioms, cultural norms, and connecting them with other community events as well as government services.</p>\r\n                  </div>\r\n                  <div className='column'>\r\n                    <figure className='video-container'>\r\n                      <iframe title='video three' width='1522' height='856' src='https://www.youtube.com/embed/I73Hvl7nhfw' frameBorder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowFullScreen />\r\n                    </figure>\r\n                  </div>\r\n                </div>\r\n                <hr className='hr-full-width' />\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <section className='section block'>\r\n          <div className='content'>\r\n            <h2 className='has-text-centered has-text-weight-semibold is-size-3 is-uppercase is-large'>\r\n                EVENTS\r\n            </h2>\r\n            <br />\r\n            <br />\r\n            <p className='is-size-5 has-text-left'>The following our are current events:</p>\r\n          </div>\r\n          <div className='table__wrapper'>\r\n            <table className='table is-fullwidth'>\r\n              <thead>\r\n                <tr>\r\n                  <th>Event</th>\r\n                  <th>Description</th>\r\n                  <th>Day</th>\r\n                  <th>Time</th>\r\n                </tr>\r\n              </thead>\r\n              <tfoot>\r\n                <tr />\r\n              </tfoot>\r\n              <tbody>\r\n                <tr>\r\n                  <td><a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/shri-devi-mahalakshmi-upasana/' target='_blank' rel='noopener'>Shri Devi Mahalakshmi Upasana</a></td>\r\n                  <td>Shri Lakashmi Adoration/Worship.</td>\r\n                  <td>Tuesday</td>\r\n                  <td>6:00pm to 7:00pm</td>\r\n                </tr>\r\n                <tr>\r\n                  <td><a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/hanuman-chalisa/' target='_blank' rel='noopener'>Hanuman Chalisa</a></td>\r\n                  <td>Tuesday’s Hanumanji’s sacred hymn recital.</td>\r\n                  <td>Tuesday</td>\r\n                  <td>7:00pm to 9:00pm</td>\r\n                </tr>\r\n                <tr>\r\n                  <td><a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/hanuman-chalisa/' target='_blank' rel='noopener'>Hanuman Chalisa</a></td>\r\n                  <td>Saturday’s Hanumanji’s sacred hymn recital.</td>\r\n                  <td>Saturday</td>\r\n                  <td>12:30pm to 1:00pm</td>\r\n                </tr>\r\n                <tr>\r\n                  <td><a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/shirdi-sai-baba-toronto/' target='_blank' rel='noopener'>Sai Baba Adoration</a></td>\r\n                  <td>A day devoted to the prayer and worship of Shri Sai Baba of Shirdi.</td>\r\n                  <td>Thursday</td>\r\n                  <td>6:00pm to 9:00pm</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Classical <a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/indian-dance-classess-in-mississauga/' target='_blank' rel='noopener'>Indian Dance Class</a></td>\r\n                  <td>Classical Bharatanatyam dance class for youth.</td>\r\n                  <td>Friday</td>\r\n                  <td>7:00pm to 8:30pm</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Sai Baba Kakad Aarthi &amp; Mahima</td>\r\n                  <td>Sai Baba morning aarthi followed by breakfast.</td>\r\n                  <td>Saturday</td>\r\n                  <td>8:30am to 10:00am</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Vishnu Sahasranamam</td>\r\n                  <td>Reciting the thousand names of Lord Vishnu.</td>\r\n                  <td>Saturday</td>\r\n                  <td>12:00pm to 12:30pm</td>\r\n                </tr>\r\n                <tr>\r\n                  <td><a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/vedanta-society-of-toronto/' target='_blank' rel='noopener'>Sloka Class</a></td>\r\n                  <td>Teaching youth different verses of ancient text, bhajans and stories.</td>\r\n                  <td>Saturday</td>\r\n                  <td>3:00pm to 4:00pm</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Lakshmi Stotram</td>\r\n                  <td>Sri Lakshmi Sahasranama; Prayers and worship of Goddess Lakshmi.</td>\r\n                  <td>Saturday</td>\r\n                  <td>12:45pm to 1:00pm</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Shri Vithoba &amp; Shri Rakhumai</td>\r\n                  <td>Prayers, Bhajans, and worship of Lord Vithoba &amp; Rakhumai.</td>\r\n                  <td>Sunday</td>\r\n                  <td>6:00pm to 8:00pm</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n\r\n        <section className='section block'>\r\n          <div>\r\n            <h2 className='content has-text-centered has-text-weight-semibold is-size-3 is-uppercase is-large'>\r\n                   Location &amp; Service times\r\n            </h2>\r\n            <br />\r\n            <br />\r\n            <div className='block'>\r\n              <div className='columns is-multiline is-centered'>\r\n                <p className='content is-size-5'>SVHM is open Monday to Sunday from 8:00 pm to 9:00 pm. We are located in the beautiful wooded area near the Hersey Sports Complex and close to all major highways and the Square One Shopping Centre, the Community Center’s 3,000 square foot hall and full service kitchen are available for rent.</p>\r\n                <div className='column is-full'>\r\n                  <figure className='image is-1000x1000 block is-full'>\r\n                    <img src='https://shrivitthal.com/wp-content/uploads/2018/02/shri-vitthal-mandir-location.jpg' alt='Shri Vitthal Mandir Location' />\r\n                  </figure>\r\n                </div>\r\n                <br />\r\n                <div id='column' className='column'>\r\n                  <a id='center' className='content button is-link is-centered is-mobile is-rounded is-medium center' href='https://www.google.ca/maps/place/Shri+Vitthal+Hindu+Mandir/@43.6356401,-79.7255082,13z/data=!4m19!1m13!4m12!1m4!2m2!1d-79.7378192!2d43.6499971!4e1!1m6!1m2!1s0x882b38aeadba59af:0x3dd6ccc430171a2e!2sShri+Vitthal+Hindu+Mandir,+5359+Timberlea+Blvd+%2310,+Mississauga,+ON+L4W+4N5!2m2!1d-79.6429866!2d43.6310776!3m4!1s0x882b38aeadba59af:0x3dd6ccc430171a2e!8m2!3d43.6310776!4d-79.6429866' target='_blank' rel='nofollow noopener'>Directions</a>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className='section block'>\r\n          <h3 className='has-text-centered is-size-4 is-uppercase is-large block'>\r\n            PROUDLY SUPPORTED BY:\r\n          </h3>\r\n          <div className='section block is-flex is-horizontal-center'>\r\n            <br />\r\n            <br />\r\n            <div className='columns is-mobile is-vcentered'>\r\n              <div className='column'>\r\n                <figure className='image is-256x256'>\r\n                  <img src='https://shrivitthal.com/wp-content/uploads/2018/02/mississauga-hindu-temple-300x61.jpg' alt='img1' />\r\n                </figure>\r\n              </div>\r\n              <div className='column'>\r\n                <figure className='image is-256x256'>\r\n                  <img src='https://shrivitthal.com/wp-content/uploads/2018/02/ontario-logo-2.jpg' alt='img2' />\r\n                </figure>\r\n              </div>\r\n              <div className='column'>\r\n                <figure className='image is-256x256'>\r\n                  <img src='https://shrivitthal.com/wp-content/uploads/2018/02/google-nonprofit.jpg' alt='img3' />\r\n                </figure>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n      </div>\r\n    </section>\r\n  </div >\r\n)\r\n\r\nHomePageTemplate.propTypes = {\r\n  title: PropTypes.string,\r\n  meta_title: PropTypes.string,\r\n  meta_description: PropTypes.string,\r\n  heading: PropTypes.string,\r\n  description: PropTypes.string,\r\n  offerings: PropTypes.shape({\r\n    blurbs: PropTypes.array,\r\n  }),\r\n  testimonials: PropTypes.array,\r\n\r\n}\r\n\r\nexport default HomePageTemplate\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AboutPageTemplate from '../../components/AboutPageTemplate'\r\n\r\nconst AboutPagePreview = ({ entry, widgetFor }) => (\r\n  <AboutPageTemplate\r\n    title={entry.getIn(['data', 'title'])}\r\n    meta_title={entry.getIn(['data', 'meta_title'])}\r\n    meta_description={entry.getIn(['data', 'meta_description'])}\r\n    content={widgetFor('body')}\r\n  />\r\n)\r\n\r\nAboutPagePreview.propTypes = {\r\n  entry: PropTypes.shape({\r\n    getIn: PropTypes.func,\r\n  }),\r\n  widgetFor: PropTypes.func,\r\n}\r\n\r\nexport default AboutPagePreview\r\n","import React from 'react'\r\nimport Content from '../Content'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AboutPageTemplate = ({title, content, contentComponent}) => {\r\n  const PageContent = contentComponent || Content\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet='utf-8' />\r\n        <meta httpEquiv='x-ua-compatible' content='ie=edge' /><meta name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=yes' />\r\n        <meta name='generator' content='Gatsby 2.1.23' />\r\n        <title>{meta_title}</title>\r\n        <meta name='description' content={meta_description} />\r\n      </Helmet>\r\n\r\n      <section className='hero is-primary is-bold is-medium'>\r\n        <div className='hero-body'>\r\n          <div className='container'>\r\n            <div className='columns'>\r\n              <div className='column is-10 is-offset-1'>\r\n                <div className='section'>\r\n                  <h1 id='h1'className='title has-text-centered is-size-2 is-capitalized'>\r\n                    Mississauga Hindu Temple In The hear of the greater toronto area that welcomes all regarless of race or religious beliefs. come visit one of canada's oldest hindu mandir's and discover the beauty of celebrating diversity\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className='section section--gradient'>\r\n        <div className='container'>\r\n          <section className='section block'>\r\n            <div className='content'>\r\n              <div>\r\n                <h2 className='content has-text-centered has-text-weight-semibold is-size-3 is-uppercase is-large'>\r\n                  Welcome to Svhms\r\n                </h2>\r\n                <br />\r\n                <br />\r\n                <div className='block'>\r\n                  <p className='content is-size-5'>Shri Vitthal Hindu Mandir (SVHM) is one of Mississauga’s longest running registered non-profit devoted to bringing families together, providing a safe place of worship, assisting new comers transition into the Canadian life, and preserving old traditions while embracing new ones. </p>\r\n                  <p className='content is-size-5'>Established in 1996 in the beautiful city of Mississauga, Ontario, Canada — one of Canada’s fastest growing and diverse cities — we abide by the old simple code known as the “System of Vedanta” which combines religion, philosophy, and innovative nature of the Hindu's.  The Vedanta teaches us that we are all divine, regardless of creed, class, gender, and ethnicity, and that our souls divinity may be manifested through worship, contemplation, and unselfish work.  At SVHM we welcome everyone.</p>\r\n                  <p className='content is-size-5'>The Mandir is located close to Toronto, Brampton, Oakville, Richmond Hill, Milton, and Etobicoke. Come visit us today and join our community, all are welcome!</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <section className='section'>\r\n            <figure className='video-container'>\r\n              <iframe title='temple video' width='1035' height='1000' src='https://www.youtube.com/embed/mgabrMvtUrw' frameBorder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowFullScreen />\r\n            </figure>\r\n            <div className='block content'>\r\n              <br />\r\n              <br />\r\n              <h2 className='has-text-centered has-text-weight-semibold is-size-3 is-uppercase is-large'>\r\n                HINDU TEMPLE IN MISSISSAUGA\r\n              </h2>\r\n              <br />\r\n              <br />\r\n              <p className='is-size-5'> SVHM is different from other the other temples and mandir’s in and around Toronto, Richmond Hill, Brampton, and Mississauga as it is more family oriented and transparent. The temple does not fund any external political groups and adheres to CRA policies for non profit organizations. </p>\r\n            </div>\r\n          </section>\r\n\r\n          <div className='section block'>\r\n            <div className='content'>\r\n              <hr className='hr-blue' />\r\n              <br />\r\n              <p className='count is-size-4 has-text-weight-light'>\r\n                \"Immigrating from Northern India in 2016, I did not find a facility in Toronto that provided a place where I can pray, mediate, practice yoga, and meet other Canadian-Tibetans like myself. Then I discovered SVHM, which has been instrumental in my journey of transitioning into the Canadian lifestyle, helping me establish myself in the GTA, build a network of quality peers who share my values, and where I can peacefully pray.\"\r\n              </p>\r\n              <br />\r\n              <div className='columns is-vcentered is-gapless is-mobile is-centered'>\r\n                <div className='column' />\r\n                <div className='column'>\r\n                  <figure className='image is-128x128'>\r\n                    <img className='is-rounded' src='https://shrivitthal.com/wp-content/uploads/2018/02/25497478040_140ce47f31_k.jpg' alt='25497478040_140ce47f31_k.jpg' />\r\n                  </figure>\r\n                </div>\r\n                <div className='column'>\r\n                  <p className='is-size-5 is-uppercase is-centered'>\r\n                    TSERING WANGCHUKs\r\n                  </p>\r\n                  <p className='is-size-6 is-centered'>\r\n                    Tibetan-Canadian\r\n                  </p>\r\n                </div>\r\n                <div className='column' />\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <hr className='hr-blue' />\r\n          </div>\r\n\r\n          <div className='section block'>\r\n            <div className='content'>\r\n              <p className='is-size-4'> SVHM is different from other the other temples and mandir’s in and around Toronto, Richmond Hill, Brampton, and Mississauga as it is more family oriented and transparent. The temple does not fund any external political groups and adheres to CRA policies for non profit organizations. </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='section block'>\r\n            <div>\r\n              <h2 className='content has-text-centered has-text-weight-semibold is-size-3 is-uppercase is-large'>\r\n                WHAT WE OFFER\r\n              </h2>\r\n              <br />\r\n              <br />\r\n              <div className='columns is-multiline'>\r\n                <div className='column is-full block'>\r\n                  <div className='columns is-vcentered'>\r\n                    <div className='column content'>\r\n                      <hr className='hr-left' />\r\n                      <h3 className='is-size-4 has-text-link is-uppercase'>CULTURAL PRESERVATION</h3>\r\n                      <p className='is-size-5'>Through events and story telling, we keep the ancient Hindu traditions alive ensuring their adoption by the next generation of Canadians.</p>\r\n                    </div>\r\n                    <div className='column'>\r\n                      <figure className='video-container'>\r\n                        <iframe title='video one' width='1035' height='1000' src='https://www.youtube.com/embed/mgabrMvtUrw' frameBorder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowFullScreen />\r\n                      </figure>\r\n                    </div>\r\n                  </div>\r\n                  <hr className='hr-full-width' />\r\n                </div>\r\n                <div className='column  is-full block'>\r\n                  <div className='columns is-vcentered'>\r\n                    <div className='column content'>\r\n                      <hr className='hr-left' />\r\n                      <h3 className='is-size-4 has-text-link is-uppercase'>A PLACE OF WORSHIP</h3>\r\n                      <p className='is-size-5'>Our primary divine figureheads are Vitthoba, Ganesh, &amp; Sai Baba however members of our community are free to worship and pray to their god/goddess of choice.  Our facility has integrated most idols and we frequently hold cross-cultural events with other non-profits and places of worship.</p>\r\n                    </div>\r\n                    <div className='column'>\r\n                      <figure className='video-container'>\r\n                        <iframe title='video two' width='1522' height='856' src='https://www.youtube.com/embed/Fa9dFBf5Z4A' frameBorder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowFullScreen />\r\n                      </figure>\r\n                    </div>\r\n                  </div>\r\n                  <hr className='hr-full-width' />\r\n                </div>\r\n                <div className='column is-full block'>\r\n                  <div className='columns is-vcentered'>\r\n                    <div className='column content'>\r\n                      <hr className='hr-left' />\r\n                      <h3 className='is-size-4 has-text-link is-uppercase'>EMBRACE CANADA</h3>\r\n                      <p className='is-size-5'>Throughout the year we hold numerous events that allow new immigrants and visiting dignitaries to experience Canadian culture – true north strong and free.</p>\r\n                      <p className='is-size-5'>We also help newcomers transition into the Canadian life by helping them learn the language and idioms, cultural norms, and connecting them with other community events as well as government services.</p>\r\n                    </div>\r\n                    <div className='column'>\r\n                      <figure className='video-container'>\r\n                        <iframe title='video three' width='1522' height='856' src='https://www.youtube.com/embed/I73Hvl7nhfw' frameBorder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowFullScreen />\r\n                      </figure>\r\n                    </div>\r\n                  </div>\r\n                  <hr className='hr-full-width' />\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <section className='section block'>\r\n            <div className='content'>\r\n              <h2 className='has-text-centered has-text-weight-semibold is-size-3 is-uppercase is-large'>\r\n                EVENTS\r\n              </h2>\r\n              <br />\r\n              <br />\r\n              <p className='is-size-5 has-text-left'>The following our are current events:</p>\r\n            </div>\r\n            <div className='table__wrapper'>\r\n              <table className='table is-fullwidth'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Event</th>\r\n                    <th>Description</th>\r\n                    <th>Day</th>\r\n                    <th>Time</th>\r\n                  </tr>\r\n                </thead>\r\n                <tfoot>\r\n                  <tr />\r\n                </tfoot>\r\n                <tbody>\r\n                  <tr>\r\n                    <td><a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/shri-devi-mahalakshmi-upasana/' target='_blank' rel='noopener'>Shri Devi Mahalakshmi Upasana</a></td>\r\n                    <td>Shri Lakashmi Adoration/Worship.</td>\r\n                    <td>Tuesday</td>\r\n                    <td>6:00pm to 7:00pm</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td><a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/hanuman-chalisa/' target='_blank' rel='noopener'>Hanuman Chalisa</a></td>\r\n                    <td>Tuesday’s Hanumanji’s sacred hymn recital.</td>\r\n                    <td>Tuesday</td>\r\n                    <td>7:00pm to 9:00pm</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td><a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/hanuman-chalisa/' target='_blank' rel='noopener'>Hanuman Chalisa</a></td>\r\n                    <td>Saturday’s Hanumanji’s sacred hymn recital.</td>\r\n                    <td>Saturday</td>\r\n                    <td>12:30pm to 1:00pm</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td><a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/shirdi-sai-baba-toronto/' target='_blank' rel='noopener'>Sai Baba Adoration</a></td>\r\n                    <td>A day devoted to the prayer and worship of Shri Sai Baba of Shirdi.</td>\r\n                    <td>Thursday</td>\r\n                    <td>6:00pm to 9:00pm</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Classical <a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/indian-dance-classess-in-mississauga/' target='_blank' rel='noopener'>Indian Dance Class</a></td>\r\n                    <td>Classical Bharatanatyam dance class for youth.</td>\r\n                    <td>Friday</td>\r\n                    <td>7:00pm to 8:30pm</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Sai Baba Kakad Aarthi &amp; Mahima</td>\r\n                    <td>Sai Baba morning aarthi followed by breakfast.</td>\r\n                    <td>Saturday</td>\r\n                    <td>8:30am to 10:00am</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Vishnu Sahasranamam</td>\r\n                    <td>Reciting the thousand names of Lord Vishnu.</td>\r\n                    <td>Saturday</td>\r\n                    <td>12:00pm to 12:30pm</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td><a href='http://web.archive.org/web/20161101033503/http://www.shrivitthal.com/events/vedanta-society-of-toronto/' target='_blank' rel='noopener'>Sloka Class</a></td>\r\n                    <td>Teaching youth different verses of ancient text, bhajans and stories.</td>\r\n                    <td>Saturday</td>\r\n                    <td>3:00pm to 4:00pm</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Lakshmi Stotram</td>\r\n                    <td>Sri Lakshmi Sahasranama; Prayers and worship of Goddess Lakshmi.</td>\r\n                    <td>Saturday</td>\r\n                    <td>12:45pm to 1:00pm</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Shri Vithoba &amp; Shri Rakhumai</td>\r\n                    <td>Prayers, Bhajans, and worship of Lord Vithoba &amp; Rakhumai.</td>\r\n                    <td>Sunday</td>\r\n                    <td>6:00pm to 8:00pm</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </section>\r\n\r\n          <section className='section block'>\r\n            <div>\r\n              <h2 className='content has-text-centered has-text-weight-semibold is-size-3 is-uppercase is-large'>\r\n                   Location &amp; Service times\r\n              </h2>\r\n              <br />\r\n              <br />\r\n              <div className='block'>\r\n                <div className='columns is-multiline is-centered'>\r\n                  <p className='content is-size-5'>SVHM is open Monday to Sunday from 8:00 pm to 9:00 pm. We are located in the beautiful wooded area near the Hersey Sports Complex and close to all major highways and the Square One Shopping Centre, the Community Center’s 3,000 square foot hall and full service kitchen are available for rent.</p>\r\n                  <div className='column is-full'>\r\n                    <figure className='image is-1000x1000 block is-full'>\r\n                      <img src='https://shrivitthal.com/wp-content/uploads/2018/02/shri-vitthal-mandir-location.jpg' alt='Shri Vitthal Mandir Location' />\r\n                    </figure>\r\n                  </div>\r\n                  <br />\r\n                  <div id='column' className='column'>\r\n                    <a id='center' className='content button is-link is-centered is-mobile is-rounded is-medium center' href='https://www.google.ca/maps/place/Shri+Vitthal+Hindu+Mandir/@43.6356401,-79.7255082,13z/data=!4m19!1m13!4m12!1m4!2m2!1d-79.7378192!2d43.6499971!4e1!1m6!1m2!1s0x882b38aeadba59af:0x3dd6ccc430171a2e!2sShri+Vitthal+Hindu+Mandir,+5359+Timberlea+Blvd+%2310,+Mississauga,+ON+L4W+4N5!2m2!1d-79.6429866!2d43.6310776!3m4!1s0x882b38aeadba59af:0x3dd6ccc430171a2e!8m2!3d43.6310776!4d-79.6429866' target='_blank' rel='nofollow noopener'>Directions</a>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <section className='section block'>\r\n            <h3 className='has-text-centered is-size-4 is-uppercase is-large block'>\r\n            PROUDLY SUPPORTED BY:\r\n            </h3>\r\n            <div className='section block is-flex is-horizontal-center'>\r\n              <br />\r\n              <br />\r\n              <div className='columns is-mobile is-vcentered'>\r\n                <div className='column'>\r\n                  <figure className='image is-256x256'>\r\n                    <img src='https://shrivitthal.com/wp-content/uploads/2018/02/mississauga-hindu-temple-300x61.jpg' alt='img1' />\r\n                  </figure>\r\n                </div>\r\n                <div className='column'>\r\n                  <figure className='image is-256x256'>\r\n                    <img src='https://shrivitthal.com/wp-content/uploads/2018/02/ontario-logo-2.jpg' alt='img2' />\r\n                  </figure>\r\n                </div>\r\n                <div className='column'>\r\n                  <figure className='image is-256x256'>\r\n                    <img src='https://shrivitthal.com/wp-content/uploads/2018/02/google-nonprofit.jpg' alt='img3' />\r\n                  </figure>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n        </div>\r\n      </section>\r\n    </div >\r\n  )\r\n}\r\n\r\nAboutPageTemplate.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  content: PropTypes.string,\r\n  contentComponent: PropTypes.func,\r\n}\r\n\r\nexport default AboutPageTemplate\r\n","import React from 'react'\r\n\r\nexport const HTMLContent = ({ content, className }) => (\r\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\r\n)\r\n\r\nconst Content = ({ content, className }) => (\r\n  <div className={className}>{content}</div>\r\n)\r\n\r\nexport default Content\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ArticleTemplate from '../../components/ArticleTemplate'\r\n\r\nconst ArticlePreview = ({entry, widgetFor}) => {\r\n  return (\r\n    <ArticleTemplate\r\n      content={widgetFor('body')}\r\n      cover={entry.getIn(['data', 'cover'])}\r\n      meta_title={entry.getIn(['data', 'meta_title'])}\r\n      meta_desc={entry.getIn(['data', 'meta_description'])}\r\n      title={entry.getIn(['data', 'title'])}\r\n      slug={entry.getIn(['data', 'slug'])}\r\n    />\r\n  )\r\n}\r\n\r\nArticlePreview.propTypes = {\r\n  entry: PropTypes.shape({\r\n    getIn: PropTypes.func,\r\n  }),\r\n  widgetFor: PropTypes.func,\r\n}\r\n\r\nexport default ArticlePreview\r\n","import React from 'react'\r\nimport Content from '../Content'\r\nimport { kebabCase } from 'lodash'\r\nimport { Link } from 'gatsby'\r\n\r\nconst ArticleTemplate = ({\r\n  content,\r\n  contentComponent,\r\n  cover,\r\n  meta_title,\r\n  meta_desc,\r\n  tags,\r\n  title,\r\n}) => {\r\n  const PostContent = contentComponent || Content\r\n  return (\r\n    <div>\r\n      <h1 className='title is-size-2 has-text-weight-bold is-bold-light'>\r\n        {title}\r\n      </h1>\r\n      <img src={cover} alt={title} />\r\n      <PostContent content={content} />\r\n      <div style={{ marginTop: `4rem` }}>\r\n        <h4>Tags</h4>\r\n        <ul className='taglist'>\r\n          {(tags && tags.length)\r\n            ? tags.map(tag => (\r\n              <li key={tag + `tag`}>\r\n                <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\r\n              </li>\r\n            ))\r\n            : null\r\n          }\r\n        </ul>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ArticleTemplate\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\n\nexport default React.createContext\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport pages from \"./pages.json\"\nimport loader from \"./loader\"\nimport JSONStore from \"./json-store\"\n\nconst DevPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(JSONStore, {\n    pages,\n    location,\n    pageResources,\n  })\n}\n\nDevPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default DevPageRenderer\n","import pageFinderFactory from \"./find-page\"\nimport emitter from \"./emitter\"\nimport prefetchHelper from \"./prefetch\"\n\nconst preferDefault = m => (m && m.default) || m\n\nlet devGetPageData\nlet inInitialRender = true\nlet hasFetched = Object.create(null)\nlet syncRequires = {}\nlet asyncRequires = {}\nlet jsonDataPaths = {}\nlet fetchHistory = []\nlet fetchingPageResourceMapPromise = null\nlet fetchedPageResourceMap = false\n/**\n * Indicate if pages manifest is loaded\n *  - in production it is split to separate \"pages-manifest\" chunk that need to be lazy loaded,\n *  - in development it is part of single \"common\" chunk and is available from the start.\n */\nlet hasPageResourceMap = process.env.NODE_ENV !== `production`\nlet apiRunner\nconst failedPaths = {}\nconst MAX_HISTORY = 5\n\nconst jsonPromiseStore = {}\n\nif (process.env.NODE_ENV !== `production`) {\n  devGetPageData = require(`./socketIo`).getPageData\n}\n\n/**\n * Fetch resource map (pages data and paths to json files with results of\n *  queries)\n */\nconst fetchPageResourceMap = () => {\n  if (!fetchingPageResourceMapPromise) {\n    fetchingPageResourceMapPromise = new Promise(resolve => {\n      asyncRequires\n        .data()\n        .then(({ pages, dataPaths }) => {\n          // TODO — expose proper way to access this data from plugins.\n          // Need to come up with an API for plugins to access\n          // site info.\n          window.___dataPaths = dataPaths\n          queue.addPagesArray(pages)\n          queue.addDataPaths(dataPaths)\n          hasPageResourceMap = true\n          resolve((fetchedPageResourceMap = true))\n        })\n        .catch(e => {\n          console.warn(\n            `Failed to fetch pages manifest. Gatsby will reload on next navigation.`\n          )\n          // failed to grab pages metadata\n          // for now let's just resolve this - on navigation this will cause missing resources\n          // and will trigger page reload and then it will retry\n          // this can happen with service worker updates when webpack manifest points to old\n          // chunk that no longer exists on server\n          resolve((fetchedPageResourceMap = true))\n        })\n    })\n  }\n  return fetchingPageResourceMapPromise\n}\n\nconst createJsonURL = jsonName => `${__PATH_PREFIX__}/static/d/${jsonName}.json`\nconst createComponentUrls = componentChunkName =>\n  window.___chunkMapping[componentChunkName].map(\n    chunk => __PATH_PREFIX__ + chunk\n  )\n\nconst fetchResource = resourceName => {\n  // Find resource\n  let resourceFunction\n  if (resourceName.slice(0, 12) === `component---`) {\n    resourceFunction = asyncRequires.components[resourceName]\n  } else {\n    if (resourceName in jsonPromiseStore) {\n      resourceFunction = () => jsonPromiseStore[resourceName]\n    } else {\n      resourceFunction = () => {\n        const fetchPromise = new Promise((resolve, reject) => {\n          const url = createJsonURL(jsonDataPaths[resourceName])\n          const req = new XMLHttpRequest()\n          req.open(`GET`, url, true)\n          req.withCredentials = true\n          req.onreadystatechange = () => {\n            if (req.readyState == 4) {\n              if (req.status === 200) {\n                resolve(JSON.parse(req.responseText))\n              } else {\n                delete jsonPromiseStore[resourceName]\n                reject()\n              }\n            }\n          }\n          req.send(null)\n        })\n        jsonPromiseStore[resourceName] = fetchPromise\n        return fetchPromise\n      }\n    }\n  }\n\n  // Download the resource\n  hasFetched[resourceName] = true\n  return new Promise(resolve => {\n    const fetchPromise = resourceFunction()\n    let failed = false\n    return fetchPromise\n      .catch(() => {\n        failed = true\n      })\n      .then(component => {\n        fetchHistory.push({\n          resource: resourceName,\n          succeeded: !failed,\n        })\n\n        fetchHistory = fetchHistory.slice(-MAX_HISTORY)\n\n        resolve(component)\n      })\n  })\n}\n\nconst prefetchResource = resourceName => {\n  if (resourceName.slice(0, 12) === `component---`) {\n    return Promise.all(\n      createComponentUrls(resourceName).map(url => prefetchHelper(url))\n    )\n  } else {\n    const url = createJsonURL(jsonDataPaths[resourceName])\n    return prefetchHelper(url)\n  }\n}\n\nconst getResourceModule = resourceName =>\n  fetchResource(resourceName).then(preferDefault)\n\nconst appearsOnLine = () => {\n  const isOnLine = navigator.onLine\n  if (typeof isOnLine === `boolean`) {\n    return isOnLine\n  }\n\n  // If no navigator.onLine support assume onLine if any of last N fetches succeeded\n  const succeededFetch = fetchHistory.find(entry => entry.succeeded)\n  return !!succeededFetch\n}\n\nconst handleResourceLoadError = (path, message) => {\n  if (!failedPaths[path]) {\n    failedPaths[path] = message\n  }\n\n  if (\n    appearsOnLine() &&\n    window.location.pathname.replace(/\\/$/g, ``) !== path.replace(/\\/$/g, ``)\n  ) {\n    window.location.pathname = path\n  }\n}\n\nconst onPrefetchPathname = pathname => {\n  if (!prefetchTriggered[pathname]) {\n    apiRunner(`onPrefetchPathname`, { pathname })\n    prefetchTriggered[pathname] = true\n  }\n}\n\nconst onPostPrefetchPathname = pathname => {\n  if (!prefetchCompleted[pathname]) {\n    apiRunner(`onPostPrefetchPathname`, { pathname })\n    prefetchCompleted[pathname] = true\n  }\n}\n\n/**\n * Check if we should fallback to resources for 404 page if resources for a page are not found\n *\n * We can't do that when we don't have full pages manifest - we don't know if page exist or not if we don't have it.\n * We also can't do that on initial render / mount in case we just can't load resources needed for first page.\n * Not falling back to 404 resources will cause \"EnsureResources\" component to handle scenarios like this with\n * potential reload\n * @param {string} path Path to a page\n */\nconst shouldFallbackTo404Resources = path =>\n  (hasPageResourceMap || inInitialRender) && path !== `/404.html`\n\n// Note we're not actively using the path data atm. There\n// could be future optimizations however around trying to ensure\n// we load all resources for likely-to-be-visited paths.\n// let pathArray = []\n// let pathCount = {}\n\nlet findPage\nlet pathScriptsCache = {}\nlet prefetchTriggered = {}\nlet prefetchCompleted = {}\nlet disableCorePrefetching = false\n\nconst queue = {\n  addPagesArray: newPages => {\n    findPage = pageFinderFactory(newPages, __PATH_PREFIX__)\n  },\n  addDevRequires: devRequires => {\n    syncRequires = devRequires\n  },\n  addProdRequires: prodRequires => {\n    asyncRequires = prodRequires\n  },\n  addDataPaths: dataPaths => {\n    jsonDataPaths = dataPaths\n  },\n  // Hovering on a link is a very strong indication the user is going to\n  // click on it soon so let's start prefetching resources for this\n  // pathname.\n  hovering: path => {\n    queue.getResourcesForPathname(path)\n  },\n  enqueue: path => {\n    if (!apiRunner)\n      console.error(`Run setApiRunnerForLoader() before enqueing paths`)\n\n    // Skip prefetching if we know user is on slow or constrained connection\n    if (`connection` in navigator) {\n      if ((navigator.connection.effectiveType || ``).includes(`2g`)) {\n        return false\n      }\n      if (navigator.connection.saveData) {\n        return false\n      }\n    }\n\n    // Tell plugins with custom prefetching logic that they should start\n    // prefetching this path.\n    onPrefetchPathname(path)\n\n    // If a plugin has disabled core prefetching, stop now.\n    if (disableCorePrefetching.some(a => a)) {\n      return false\n    }\n\n    // Check if the page exists.\n    let page = findPage(path)\n\n    // In production, we lazy load page metadata. If that\n    // hasn't been fetched yet, start fetching it now.\n    if (\n      process.env.NODE_ENV === `production` &&\n      !page &&\n      !fetchedPageResourceMap\n    ) {\n      // If page wasn't found check and we didn't fetch resources map for\n      // all pages, wait for fetch to complete and try find page again\n      return fetchPageResourceMap().then(() => queue.enqueue(path))\n    }\n\n    if (!page) {\n      return false\n    }\n\n    if (\n      process.env.NODE_ENV !== `production` &&\n      process.env.NODE_ENV !== `test`\n    ) {\n      devGetPageData(page.path)\n    }\n\n    // Prefetch resources.\n    if (process.env.NODE_ENV === `production`) {\n      Promise.all([\n        prefetchResource(page.jsonName),\n        prefetchResource(page.componentChunkName),\n      ]).then(() => {\n        // Tell plugins the path has been successfully prefetched\n        onPostPrefetchPathname(path)\n      })\n    }\n\n    return true\n  },\n\n  getPage: pathname => findPage(pathname),\n\n  getResourceURLsForPathname: path => {\n    const page = findPage(path)\n    if (page) {\n      return [\n        ...createComponentUrls(page.componentChunkName),\n        createJsonURL(jsonDataPaths[page.jsonName]),\n      ]\n    } else {\n      return null\n    }\n  },\n\n  getResourcesForPathnameSync: path => {\n    const page = findPage(path)\n    if (page) {\n      return pathScriptsCache[page.path]\n    } else if (shouldFallbackTo404Resources(path)) {\n      return queue.getResourcesForPathnameSync(`/404.html`)\n    } else {\n      return null\n    }\n  },\n\n  // Get resources (code/data) for a path. Fetches metdata first\n  // if necessary and then the code/data bundles. Used for prefetching\n  // and getting resources for page changes.\n  getResourcesForPathname: path =>\n    new Promise((resolve, reject) => {\n      // Production code path\n      if (failedPaths[path]) {\n        handleResourceLoadError(\n          path,\n          `Previously detected load failure for \"${path}\"`\n        )\n        reject()\n        return\n      }\n      const page = findPage(path)\n\n      // In production, we lazy load page metadata. If that\n      // hasn't been fetched yet, start fetching it now.\n      if (\n        !page &&\n        !fetchedPageResourceMap &&\n        process.env.NODE_ENV === `production`\n      ) {\n        // If page wasn't found check and we didn't fetch resources map for\n        // all pages, wait for fetch to complete and try to get resources again\n        fetchPageResourceMap().then(() =>\n          resolve(queue.getResourcesForPathname(path))\n        )\n        return\n      }\n\n      if (!page) {\n        if (shouldFallbackTo404Resources(path)) {\n          console.log(`A page wasn't found for \"${path}\"`)\n\n          // Preload the custom 404 page\n          resolve(queue.getResourcesForPathname(`/404.html`))\n          return\n        }\n\n        resolve()\n        return\n      }\n\n      // Use the path from the page so the pathScriptsCache uses\n      // the normalized path.\n      path = page.path\n\n      // Check if it's in the cache already.\n      if (pathScriptsCache[path]) {\n        emitter.emit(`onPostLoadPageResources`, {\n          page,\n          pageResources: pathScriptsCache[path],\n        })\n        resolve(pathScriptsCache[path])\n        return\n      }\n\n      // Nope, we need to load resource(s)\n      emitter.emit(`onPreLoadPageResources`, {\n        path,\n      })\n\n      // In development we know the code is loaded already\n      // so we just return with it immediately.\n      if (process.env.NODE_ENV !== `production`) {\n        const pageResources = {\n          component: syncRequires.components[page.componentChunkName],\n          page,\n        }\n\n        // Add to the cache.\n        pathScriptsCache[path] = pageResources\n        devGetPageData(page.path).then(pageData => {\n          emitter.emit(`onPostLoadPageResources`, {\n            page,\n            pageResources,\n          })\n          // Tell plugins the path has been successfully prefetched\n          onPostPrefetchPathname(path)\n\n          resolve(pageResources)\n        })\n      } else {\n        Promise.all([\n          getResourceModule(page.componentChunkName),\n          getResourceModule(page.jsonName),\n        ]).then(([component, json]) => {\n          if (!(component && json)) {\n            resolve(null)\n            return\n          }\n\n          const pageResources = {\n            component,\n            json,\n            page,\n          }\n          pageResources.page.jsonURL = createJsonURL(\n            jsonDataPaths[page.jsonName]\n          )\n          pathScriptsCache[path] = pageResources\n          resolve(pageResources)\n\n          emitter.emit(`onPostLoadPageResources`, {\n            page,\n            pageResources,\n          })\n\n          // Tell plugins the path has been successfully prefetched\n          onPostPrefetchPathname(path)\n        })\n      }\n    }),\n}\n\nexport const postInitialRenderWork = () => {\n  inInitialRender = false\n  if (process.env.NODE_ENV === `production`) {\n    // We got all resources needed for first mount,\n    // we can fetch resoures for all pages.\n    fetchPageResourceMap()\n  }\n}\n\nexport const setApiRunnerForLoader = runner => {\n  apiRunner = runner\n  disableCorePrefetching = apiRunner(`disableCorePrefetching`)\n}\n\nexport const publicLoader = {\n  getResourcesForPathname: queue.getResourcesForPathname,\n  getResourceURLsForPathname: queue.getResourceURLsForPathname,\n  getResourcesForPathnameSync: queue.getResourcesForPathnameSync,\n}\n\nexport default queue\n","// TODO add tests especially for handling prefixed links.\nimport { match as matchPath } from \"@reach/router/lib/utils\"\nimport stripPrefix from \"./strip-prefix\"\n\nconst pageCache = {}\n\nexport default (pages, pathPrefix = ``) => rawPathname => {\n  let pathname = decodeURIComponent(rawPathname)\n\n  // Remove the pathPrefix from the pathname.\n  let trimmedPathname = stripPrefix(pathname, pathPrefix)\n\n  // Remove any hashfragment\n  if (trimmedPathname.split(`#`).length > 1) {\n    trimmedPathname = trimmedPathname\n      .split(`#`)\n      .slice(0, -1)\n      .join(``)\n  }\n\n  // Remove search query\n  if (trimmedPathname.split(`?`).length > 1) {\n    trimmedPathname = trimmedPathname\n      .split(`?`)\n      .slice(0, -1)\n      .join(``)\n  }\n\n  if (pageCache[trimmedPathname]) {\n    return pageCache[trimmedPathname]\n  }\n\n  let foundPage\n  // Array.prototype.find is not supported in IE so we use this somewhat odd\n  // work around.\n  pages.some(page => {\n    let pathToMatch = page.matchPath ? page.matchPath : page.path\n    if (matchPath(pathToMatch, trimmedPathname)) {\n      foundPage = page\n      pageCache[trimmedPathname] = page\n      return true\n    }\n\n    // Finally, try and match request with default document.\n    if (matchPath(`${page.path}index.html`, trimmedPathname)) {\n      foundPage = page\n      pageCache[trimmedPathname] = page\n      return true\n    }\n\n    return false\n  })\n\n  return foundPage\n}\n","/**\n * Remove a prefix from a string. Return the input string if the given prefix\n * isn't found.\n */\n\nexport default (str, prefix = ``) => {\n  if (str.substr(0, prefix.length) === prefix) return str.slice(prefix.length)\n  return str\n}\n","import mitt from \"mitt\"\n\nconst emitter = mitt()\nexport default emitter\n","const support = function(feature) {\n  if (typeof document === `undefined`) {\n    return false\n  }\n  const fakeLink = document.createElement(`link`)\n  try {\n    if (fakeLink.relList && typeof fakeLink.relList.supports === `function`) {\n      return fakeLink.relList.supports(feature)\n    }\n  } catch (err) {\n    return false\n  }\n  return false\n}\n\nconst linkPrefetchStrategy = function(url) {\n  return new Promise((resolve, reject) => {\n    if (typeof document === `undefined`) {\n      reject()\n      return\n    }\n\n    const link = document.createElement(`link`)\n    link.setAttribute(`rel`, `prefetch`)\n    link.setAttribute(`href`, url)\n\n    link.onload = resolve\n    link.onerror = reject\n\n    const parentElement =\n      document.getElementsByTagName(`head`)[0] ||\n      document.getElementsByName(`script`)[0].parentNode\n    parentElement.appendChild(link)\n  })\n}\n\nconst xhrPrefetchStrategy = function(url) {\n  return new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest()\n    req.open(`GET`, url, true)\n    req.withCredentials = true\n\n    req.onload = () => {\n      if (req.status === 200) {\n        resolve()\n      } else {\n        reject()\n      }\n    }\n\n    req.send(null)\n  })\n}\n\nconst supportedPrefetchStrategy = support(`prefetch`)\n  ? linkPrefetchStrategy\n  : xhrPrefetchStrategy\n\nconst preFetched = {}\n\nconst prefetch = function(url) {\n  return new Promise(resolve => {\n    if (preFetched[url]) {\n      resolve()\n      return\n    }\n\n    supportedPrefetchStrategy(url)\n      .then(() => {\n        resolve()\n        preFetched[url] = true\n      })\n      .catch(() => {}) // 404s are logged to the console anyway\n  })\n}\n\nexport default prefetch\n","import { reportError, clearError } from \"./error-overlay-handler\"\n\nlet socket = null\n\nlet staticQueryData = {}\nlet pageQueryData = {}\nlet isInitialized = false\n\nexport const getStaticQueryData = () => staticQueryData\nexport const getPageQueryData = () => pageQueryData\nexport const getIsInitialized = () => isInitialized\n\nexport default function socketIo() {\n  if (process.env.NODE_ENV !== `production`) {\n    if (!socket) {\n      // Try to initialize web socket if we didn't do it already\n      try {\n        // eslint-disable-next-line no-undef\n        socket = io()\n\n        const didDataChange = (msg, queryData) =>\n          !(msg.payload.id in queryData) ||\n          JSON.stringify(msg.payload.result) !==\n            JSON.stringify(queryData[msg.payload.id])\n\n        socket.on(`message`, msg => {\n          if (msg.type === `staticQueryResult`) {\n            if (didDataChange(msg, staticQueryData)) {\n              staticQueryData = {\n                ...staticQueryData,\n                [msg.payload.id]: msg.payload.result,\n              }\n            }\n          } else if (msg.type === `pageQueryResult`) {\n            if (didDataChange(msg, pageQueryData)) {\n              pageQueryData = {\n                ...pageQueryData,\n                [msg.payload.id]: msg.payload.result,\n              }\n            }\n          } else if (msg.type === `overlayError`) {\n            if (msg.payload.message) {\n              reportError(msg.payload.id, msg.payload.message)\n            } else {\n              clearError(msg.payload.id)\n            }\n          }\n          if (msg.type && msg.payload) {\n            ___emitter.emit(msg.type, msg.payload)\n          }\n        })\n      } catch (err) {\n        console.error(`Could not connect to socket.io on dev server.`)\n      }\n    }\n    return socket\n  } else {\n    return null\n  }\n}\n\nconst inFlightGetPageDataPromiseCache = {}\nfunction getPageData(pathname) {\n  if (inFlightGetPageDataPromiseCache[pathname]) {\n    return inFlightGetPageDataPromiseCache[pathname]\n  } else {\n    inFlightGetPageDataPromiseCache[pathname] = new Promise(resolve => {\n      if (pageQueryData[pathname]) {\n        delete inFlightGetPageDataPromiseCache[pathname]\n        resolve(pageQueryData[pathname])\n      } else {\n        const onPageDataCallback = msg => {\n          if (msg.type === `pageQueryResult` && msg.payload.id === pathname) {\n            socket.off(`message`, onPageDataCallback)\n            delete inFlightGetPageDataPromiseCache[pathname]\n            resolve(pageQueryData[pathname])\n          }\n        }\n        socket.on(`message`, onPageDataCallback)\n\n        socket.emit(`getDataForPath`, pathname)\n      }\n    })\n  }\n  return inFlightGetPageDataPromiseCache[pathname]\n}\n\n// Tell websocket-manager.js the new path we're on.\n// This will help the backend prioritize queries for this\n// path.\nfunction registerPath(path) {\n  socket.emit(`registerPath`, path)\n}\n\n// Unregister the former path\nfunction unregisterPath(path) {\n  socket.emit(`unregisterPath`, path)\n}\n\nexport { getPageData, registerPath, unregisterPath }\n","import * as ErrorOverlay from \"react-error-overlay\"\n\n// Report runtime errors\nErrorOverlay.startReportingRuntimeErrors({\n  onError: () => {},\n  filename: `/commons.js`,\n})\nErrorOverlay.setEditorHandler(errorLocation =>\n  window.fetch(\n    `/__open-stack-frame-in-editor?fileName=` +\n      window.encodeURIComponent(errorLocation.fileName) +\n      `&lineNumber=` +\n      window.encodeURIComponent(errorLocation.lineNumber || 1)\n  )\n)\n\nconst errorMap = {}\n\nconst handleErrorOverlay = () => {\n  const errors = Object.values(errorMap)\n  if (errors.length > 0) {\n    const errorMsg = errors.join(`\\n\\n`)\n    ErrorOverlay.reportBuildError(errorMsg)\n  } else {\n    ErrorOverlay.dismissBuildError()\n  }\n}\n\nexport const clearError = errorID => {\n  delete errorMap[errorID]\n  handleErrorOverlay()\n}\n\nexport const reportError = (errorID, error) => {\n  if (error) {\n    errorMap[errorID] = error\n  }\n  handleErrorOverlay()\n}\n\nexport { errorMap }\n","import React from \"react\"\n\nimport PageRenderer from \"./page-renderer\"\nimport { StaticQueryContext } from \"gatsby\"\nimport {\n  getStaticQueryData,\n  getPageQueryData,\n  registerPath as socketRegisterPath,\n  unregisterPath as socketUnregisterPath,\n} from \"./socketIo\"\n\nif (process.env.NODE_ENV === `production`) {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. JSONStore is Gatsby internal ` +\n      `development-only component and should never be used in production.\\n\\n` +\n      `Unless your site has a complex or custom webpack/Gatsby ` +\n      `configuration this is likely a bug in Gatsby. ` +\n      `Please report this at https://github.com/gatsbyjs/gatsby/issues ` +\n      `with steps to reproduce this error.`\n  )\n}\n\nconst getPathFromProps = props =>\n  props.pageResources && props.pageResources.page\n    ? props.pageResources.page.path\n    : undefined\n\nclass JSONStore extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      staticQueryData: getStaticQueryData(),\n      pageQueryData: getPageQueryData(),\n      path: null,\n    }\n  }\n\n  handleMittEvent = (type, event) => {\n    this.setState({\n      staticQueryData: getStaticQueryData(),\n      pageQueryData: getPageQueryData(),\n    })\n  }\n\n  componentDidMount() {\n    socketRegisterPath(getPathFromProps(this.props))\n    ___emitter.on(`*`, this.handleMittEvent)\n  }\n\n  componentWillUnmount() {\n    socketUnregisterPath(this.state.path)\n    ___emitter.off(`*`, this.handleMittEvent)\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const newPath = getPathFromProps(props)\n    if (newPath !== state.path) {\n      socketUnregisterPath(state.path)\n      socketRegisterPath(newPath)\n      return {\n        path: newPath,\n      }\n    }\n\n    return null\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // We want to update this component when:\n    // - location changed\n    // - page data for path changed\n    // - static query results changed\n\n    return (\n      this.props.location !== nextProps.location ||\n      this.state.path !== nextState.path ||\n      this.state.pageQueryData[nextState.path] !==\n        nextState.pageQueryData[nextState.path] ||\n      this.state.staticQueryData !== nextState.staticQueryData\n    )\n  }\n\n  render() {\n    const data = this.state.pageQueryData[getPathFromProps(this.props)]\n    // eslint-disable-next-line\n    const { pages, ...propsWithoutPages } = this.props\n    if (!data) {\n      return <div />\n    }\n\n    return (\n      <StaticQueryContext.Provider value={this.state.staticQueryData}>\n        <PageRenderer {...propsWithoutPages} {...data} />\n      </StaticQueryContext.Provider>\n    )\n  }\n}\n\nexport default JSONStore\n","import React, { createElement } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { publicLoader } from \"./loader\"\nimport { apiRunner } from \"./api-runner-browser\"\n\n// Renders page\nclass PageRenderer extends React.Component {\n  render() {\n    const props = {\n      ...this.props,\n      pathContext: this.props.pageContext,\n    }\n\n    const [replacementElement] = apiRunner(`replaceComponentRenderer`, {\n      props: this.props,\n      loader: publicLoader,\n    })\n\n    const pageElement =\n      replacementElement ||\n      createElement(this.props.pageResources.component, {\n        ...props,\n        key: this.props.pageResources.page.path,\n      })\n\n    const wrappedPage = apiRunner(\n      `wrapPageElement`,\n      { element: pageElement, props },\n      pageElement,\n      ({ result }) => {\n        return { element: result, props }\n      }\n    ).pop()\n\n    return wrappedPage\n  }\n}\n\nPageRenderer.propTypes = {\n  location: PropTypes.object.isRequired,\n  pageResources: PropTypes.object.isRequired,\n  data: PropTypes.object,\n  pageContext: PropTypes.object.isRequired,\n}\n\nexport default PageRenderer\n","const plugins = require(`./api-runner-browser-plugins`)\nconst {\n  getResourcesForPathname,\n  getResourcesForPathnameSync,\n  getResourceURLsForPathname,\n} = require(`./loader`).publicLoader\n\nexports.apiRunner = (api, args = {}, defaultReturn, argTransform) => {\n  // Hooks for gatsby-cypress's API handler\n  if (process.env.CYPRESS_SUPPORT) {\n    if (window.___apiHandler) {\n      window.___apiHandler(api)\n    } else if (window.___resolvedAPIs) {\n      window.___resolvedAPIs.push(api)\n    } else {\n      window.___resolvedAPIs = [api]\n    }\n  }\n\n  let results = plugins.map(plugin => {\n    if (!plugin.plugin[api]) {\n      return undefined\n    }\n\n    args.getResourcesForPathnameSync = getResourcesForPathnameSync\n    args.getResourcesForPathname = getResourcesForPathname\n    args.getResourceURLsForPathname = getResourceURLsForPathname\n\n    const result = plugin.plugin[api](args, plugin.options)\n    if (result && argTransform) {\n      args = argTransform({ args, result, plugin })\n    }\n    return result\n  })\n\n  // Filter out undefined results.\n  results = results.filter(result => typeof result !== `undefined`)\n\n  if (results.length > 0) {\n    return results\n  } else if (defaultReturn) {\n    return [defaultReturn]\n  } else {\n    return []\n  }\n}\n\nexports.apiRunnerAsync = (api, args, defaultReturn) =>\n  plugins.reduce(\n    (previous, next) =>\n      next.plugin[api]\n        ? previous.then(() => next.plugin[api](args, next.options))\n        : previous,\n    Promise.resolve()\n  )\n","import React, { Component } from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport NavBar from '../components/NavBar'\r\nimport Footer from '../components/Footer'\r\nimport '../assets/sass/styles.sass'\r\nimport config from '../../data/config'\r\n\r\nclass TemplateWrapper extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {isActive: false}\r\n    this.toggleNavbar = this.toggleNavbar.bind(this)\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({isActive: !this.state.isActive})\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>{config.siteTitle}</title>\r\n          <meta name='description' content={config.siteDescription} />\r\n        </Helmet>\r\n        <NavBar isActive={this.state.isActive} toggleNavbar={() => this.toggleNavbar()} />\r\n        <div>{this.props.children}</div>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TemplateWrapper\r\n","import React from 'react'\r\nimport { Link, graphql, StaticQuery } from 'gatsby'\r\n// import SearchBox from '../SearchBox'\r\n\r\nconst NavBar = ({ toggleNavbar, isActive }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n            query SearchIndexQuery {\r\n                siteSearchIndex {\r\n                    index\r\n                }\r\n            }\r\n        `}\r\n    render={data => (\r\n      <nav className='navbar is-fixed-top' aria-label='main navigation'>\r\n        <div className='navbar-brand'>\r\n          <Link to='/' className='navbar-item'>\r\n            <strong>Shri Vitthal Hindu Mandir</strong>\r\n          </Link>\r\n          <button\r\n            className={`button navbar-burger ${isActive ? 'is-active' : ''}`}\r\n            data-target='navMenu'\r\n            aria-label='Menu toggle button'\r\n            onClick={toggleNavbar}\r\n          >\r\n            <span />\r\n            <span />\r\n            <span />\r\n          </button>\r\n        </div>\r\n        <div className={`navbar-menu ${isActive ? 'is-active' : ''}`} id='navMenu'>\r\n\r\n          <div className='navbar-end'>\r\n            {/* <SearchBox searchIndex={data.siteSearchIndex.index} /> */}\r\n            <Link className='navbar-item' to='/'>\r\n              Home\r\n            </Link>\r\n            <Link className='navbar-item' to='/about'>\r\n              About Us\r\n            </Link>\r\n            <Link className='navbar-item' to='/pricing'>\r\n              Our Services\r\n            </Link>\r\n            <Link className='navbar-item' to='/blog'>\r\n              Contact Us\r\n            </Link>\r\n            <div className='navbar-item'>\r\n              <div className='field is-grouped'>\r\n                <p className='control'>\r\n                  <Link\r\n                    className='button is-primary is-outlined'\r\n                    to='/contact'>\r\n                    Events\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )}\r\n  />\r\n)\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n// import config from '../../../data/config'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <section id='footer' className='section block is-vcentered' style={{background: 'blue', padding: '10%'}}>\r\n      <h3 className='has-text-centered is-size-4 is-uppercase has-text-weight-semibold is-large block has-text-white'>\r\n    HELPING THE PEOPLE OF THE GREATER TORONTO AREA COME TOGETHER, GROW IN FAITH, AND TO CELEBRATE WHAT MAKES CANADA GREAT - OUR DIVERSITY.\r\n      </h3>\r\n      <div className='section block is-flex is-horizontal-center'>\r\n        <a id='center' className='button is-link is-centered is-mobile is-rounded is-medium center is-captialized' href='http://shrivitthal.us4.list-manage1.com/subscribe?u=08406db9cc49d8dd58bd3a28a&amp;id=f70b74727c' target='_blank' rel='nofollow noopener'>Join Us</a>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport PricingPageTemplate from '../../components/PricingPageTemplate'\r\n\r\nconst PricingPagePreivew = ({ entry, getAsset }) => {\r\n  const entryPricingPlans = entry.getIn(['data', 'pricing', 'plans'])\r\n  const pricingPlans = entryPricingPlans ? entryPricingPlans.toJS() : []\r\n\r\n  return (\r\n    <PricingPageTemplate\r\n      title={entry.getIn(['data', 'title'])}\r\n      meta_title={entry.getIn(['data', 'meta_title'])}\r\n      meta_description={entry.getIn(['data', 'meta_description'])}\r\n      pricing={{\r\n        heading: entry.getIn(['data', 'pricing', 'heading']),\r\n        description: entry.getIn(['data', 'pricing', 'description']),\r\n        plans: pricingPlans,\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nPricingPagePreivew.propTypes = {\r\n  entry: PropTypes.shape({\r\n    getIn: PropTypes.func,\r\n  }),\r\n  getAsset: PropTypes.func,\r\n}\r\n\r\nexport default PricingPagePreivew\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport Pricing from '../Pricing'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PricingPageTemplate = ({\r\n  title,\r\n  meta_title,\r\n  meta_description,\r\n  pricing,\r\n}) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{meta_title}</title>\r\n      <meta name='description' content={meta_description} />\r\n    </Helmet>\r\n    <section className='hero is-primary is-bold is-medium'>\r\n      <div className='hero-body'>\r\n        <div className='container'>\r\n          <div className='columns'>\r\n            <div className='column is-10 is-offset-1'>\r\n              <div className='section'>\r\n                <h1 className='title'>\r\n                  {title}\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <section className='section section--gradient'>\r\n      <div className='container'>\r\n        <div className='section'>\r\n          <div className='columns'>\r\n            <div className='column is-10 is-offset-1'>\r\n              <div className='content'>\r\n                <h2 className='has-text-weight-semibold is-size-2'>\r\n                  {pricing.heading}\r\n                </h2>\r\n                <p className='is-size-5'>{pricing.description}</p>\r\n                <Pricing data={pricing.plans} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n)\r\n\r\nPricingPageTemplate.propTypes = {\r\n  title: PropTypes.string,\r\n  meta_title: PropTypes.string,\r\n  meta_description: PropTypes.string,\r\n  pricing: PropTypes.shape({\r\n    heading: PropTypes.string,\r\n    description: PropTypes.string,\r\n    plans: PropTypes.array,\r\n  }),\r\n}\r\n\r\nexport default PricingPageTemplate\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Pricing = ({ data }) => (\r\n  <div className='columns'>\r\n    {data.map(price => (\r\n      <div key={price.plan} className='column' style={{border: '1px solid #eaecee'}}>\r\n        <section className='section'>\r\n          <h4 className='has-text-centered has-text-weight-semibold'>\r\n            {price.plan}\r\n          </h4>\r\n          <h2 className='is-size-1 has-text-weight-bold has-text-primary has-text-centered'>\r\n                        ${price.price}\r\n          </h2>\r\n          <p className='has-text-weight-semibold'>{price.description}</p>\r\n          <ul>\r\n            {price.items.map(item => (\r\n              <li key={item} className='is-size-5'>\r\n                {item}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    ))}\r\n  </div>\r\n)\r\n\r\nPricing.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      plan: PropTypes.string,\r\n      price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      description: PropTypes.string,\r\n      items: PropTypes.array,\r\n    })\r\n  ),\r\n}\r\n\r\nexport default Pricing\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ContactPageTemplate from '../../components/ContactPageTemplate'\r\n\r\nconst ContactPagePreview = ({ entry, getAsset }) => {\r\n  return (\r\n    <ContactPageTemplate\r\n      title={entry.getIn(['data', 'title'])}\r\n      subtitle={entry.getIn(['data', 'subtitle'])}\r\n      meta_title={entry.getIn(['data', 'meta_title'])}\r\n      meta_description={entry.getIn(['data', 'meta_description'])}\r\n    />\r\n  )\r\n}\r\n\r\nContactPagePreview.propTypes = {\r\n  entry: PropTypes.shape({\r\n    getIn: PropTypes.func,\r\n  }),\r\n  getAsset: PropTypes.func,\r\n}\r\n\r\nexport default ContactPagePreview\r\n","import React, {Component} from 'react'\r\nimport { navigate } from 'gatsby-link'\r\nimport Helmet from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst encode = (data) => {\r\n  return Object.keys(data)\r\n    .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\r\n    .join('&')\r\n}\r\n\r\nclass ContactPageTemplate extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { isValidated: false }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    const form = e.target\r\n    // eslint-disable-next-line\r\n    fetch('/?no-cache=1', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n      body: encode({\r\n        'form-name': form.getAttribute('name'),\r\n        ...this.state,\r\n      }),\r\n    })\r\n      .then(() => navigate(form.getAttribute('action')))\r\n      // eslint-disable-next-line\r\n      .catch(error => alert(error))\r\n  }\r\n\r\n  render () {\r\n    const {title, subtitle, meta_title, meta_description} = this.props\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>{meta_title}</title>\r\n          <meta name='description' content={meta_description} />\r\n        </Helmet>\r\n        <section className='hero is-primary is-bold is-medium'>\r\n          <div className='hero-body'>\r\n            <div className='container'>\r\n              <div className='columns'>\r\n                <div className='column is-10 is-offset-1'>\r\n                  <div className='section'>\r\n                    <h1 className='title'>\r\n                      {title}\r\n                    </h1>\r\n                    <h2 className='subtitle'>\r\n                      {subtitle}\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className='section'>\r\n          <div className='container'>\r\n            <form\r\n              name='contact'\r\n              method='post'\r\n              action='/contact/success'\r\n              encType='application/x-www-form-urlencoded'\r\n              data-netlify='true'\r\n              data-netlify-honeypot='bot-field'\r\n              onSubmit={this.handleSubmit}\r\n            >\r\n              <input type='hidden' name='form-name' value='contact' />\r\n              <div hidden>\r\n                <label>\r\n                  Don’t fill this out:{' '}\r\n                  <input name='bot-field' onChange={this.handleChange} />\r\n                </label>\r\n              </div>\r\n              <div className='field'>\r\n                <label className='label'>Name</label>\r\n                <div className='control'>\r\n                  <input className='input' type='text' placeholder='Full Name' name='name' id='name' onChange={this.handleChange} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='field'>\r\n                <label className='label'>Email</label>\r\n                <div className='control'>\r\n                  <input className='input' type='email' placeholder='Email' name='email' id='email' onChange={this.handleChange} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='field'>\r\n                <label className='label'>Message</label>\r\n                <div className='control'>\r\n                  <textarea className='textarea' placeholder='Message' name='message' id='message' rows='6' onChange={this.handleChange} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='field is-grouped is-pulled-right'>\r\n                <div className='control'>\r\n                  <button className='button is-text' type='reset'>Cancel</button>\r\n                </div>\r\n                <div className='control'>\r\n                  <button className='button is-primary' type='submit'>Submit</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nContactPageTemplate.propTypes = {\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  meta_title: PropTypes.string,\r\n  meta_description: PropTypes.string,\r\n}\r\n\r\nexport default ContactPageTemplate\r\n"],"mappings":"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AAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AADA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAIA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AASA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA,iBAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA,iBAQA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA,eA6BA;AACA;AA9GA;AA9GA;AA+NA;AACA;AACA;AAAA,eAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9bA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAhDA;;;;;;;;;ACNA;AAAA;;;;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;ACRA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,WAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAEA;AACA;AACA;AACA;AAMA,aASA;AACA;AACA;AAAA;AAAA;AACA;AAIA;;;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AAbA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;;AArEA;AACA;AAsEA;;;;;;;;;;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AACA;AACA;AAEA;AAFA;AACA;AAFA;AAOA;AACA;AAFA;AANA;AACA;AAUA;AAIA;AAFA;AAKA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;;AA9BA;AACA;AA+BA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;AC7CA;AACA;AAIA;AAHA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAFA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAHA;AAIA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AA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","sourceRoot":""}